// Generated from /Users/jumkey/IdeaProjects/dts/src/main/resources/DTS.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,13,150,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,1,0,1,0,1,
1,1,1,1,2,1,2,1,3,1,3,1,3,5,3,49,8,3,10,3,12,3,52,9,3,1,3,1,3,1,4,1,4,1,
4,5,4,59,8,4,10,4,12,4,62,9,4,1,4,1,4,1,5,1,5,1,5,5,5,69,8,5,10,5,12,5,72,
9,5,1,5,1,5,1,6,4,6,77,8,6,11,6,12,6,78,1,7,1,7,1,7,3,7,84,8,7,1,8,1,8,1,
8,1,8,1,8,1,8,1,9,1,9,1,10,1,10,1,11,3,11,97,8,11,1,11,1,11,1,11,4,11,102,
8,11,11,11,12,11,103,3,11,106,8,11,1,11,3,11,109,8,11,1,12,1,12,1,12,5,12,
114,8,12,10,12,12,12,117,9,12,3,12,119,8,12,1,13,1,13,3,13,123,8,13,1,13,
1,13,1,14,4,14,128,8,14,11,14,12,14,129,1,14,1,14,1,15,1,15,1,16,1,16,1,
17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,0,0,19,1,
1,3,2,5,3,7,4,9,5,11,6,13,7,15,0,17,0,19,0,21,0,23,8,25,0,27,0,29,9,31,10,
33,11,35,12,37,13,1,0,9,5,0,44,45,47,57,64,90,95,95,97,122,8,0,34,34,47,
47,92,92,98,98,102,102,110,110,114,114,116,116,3,0,48,57,65,70,97,102,3,
0,0,31,34,34,92,92,1,0,48,57,1,0,49,57,2,0,69,69,101,101,2,0,43,43,45,45,
3,0,9,10,13,13,32,32,159,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,
0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,23,1,0,0,0,0,29,1,0,0,0,0,31,1,0,
0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,1,39,1,0,0,0,3,41,1,0,0,0,5,43,
1,0,0,0,7,45,1,0,0,0,9,55,1,0,0,0,11,65,1,0,0,0,13,76,1,0,0,0,15,80,1,0,
0,0,17,85,1,0,0,0,19,91,1,0,0,0,21,93,1,0,0,0,23,96,1,0,0,0,25,118,1,0,0,
0,27,120,1,0,0,0,29,127,1,0,0,0,31,133,1,0,0,0,33,135,1,0,0,0,35,137,1,0,
0,0,37,139,1,0,0,0,39,40,5,123,0,0,40,2,1,0,0,0,41,42,5,125,0,0,42,4,1,0,
0,0,43,44,5,44,0,0,44,6,1,0,0,0,45,50,5,34,0,0,46,49,3,15,7,0,47,49,3,21,
10,0,48,46,1,0,0,0,48,47,1,0,0,0,49,52,1,0,0,0,50,48,1,0,0,0,50,51,1,0,0,
0,51,53,1,0,0,0,52,50,1,0,0,0,53,54,5,34,0,0,54,8,1,0,0,0,55,60,5,60,0,0,
56,59,3,15,7,0,57,59,3,21,10,0,58,56,1,0,0,0,58,57,1,0,0,0,59,62,1,0,0,0,
60,58,1,0,0,0,60,61,1,0,0,0,61,63,1,0,0,0,62,60,1,0,0,0,63,64,5,62,0,0,64,
10,1,0,0,0,65,70,5,91,0,0,66,69,3,15,7,0,67,69,3,21,10,0,68,66,1,0,0,0,68,
67,1,0,0,0,69,72,1,0,0,0,70,68,1,0,0,0,70,71,1,0,0,0,71,73,1,0,0,0,72,70,
1,0,0,0,73,74,5,93,0,0,74,12,1,0,0,0,75,77,7,0,0,0,76,75,1,0,0,0,77,78,1,
0,0,0,78,76,1,0,0,0,78,79,1,0,0,0,79,14,1,0,0,0,80,83,5,92,0,0,81,84,7,1,
0,0,82,84,3,17,8,0,83,81,1,0,0,0,83,82,1,0,0,0,84,16,1,0,0,0,85,86,5,117,
0,0,86,87,3,19,9,0,87,88,3,19,9,0,88,89,3,19,9,0,89,90,3,19,9,0,90,18,1,
0,0,0,91,92,7,2,0,0,92,20,1,0,0,0,93,94,8,3,0,0,94,22,1,0,0,0,95,97,5,45,
0,0,96,95,1,0,0,0,96,97,1,0,0,0,97,98,1,0,0,0,98,105,3,25,12,0,99,101,5,
46,0,0,100,102,7,4,0,0,101,100,1,0,0,0,102,103,1,0,0,0,103,101,1,0,0,0,103,
104,1,0,0,0,104,106,1,0,0,0,105,99,1,0,0,0,105,106,1,0,0,0,106,108,1,0,0,
0,107,109,3,27,13,0,108,107,1,0,0,0,108,109,1,0,0,0,109,24,1,0,0,0,110,119,
5,48,0,0,111,115,7,5,0,0,112,114,7,4,0,0,113,112,1,0,0,0,114,117,1,0,0,0,
115,113,1,0,0,0,115,116,1,0,0,0,116,119,1,0,0,0,117,115,1,0,0,0,118,110,
1,0,0,0,118,111,1,0,0,0,119,26,1,0,0,0,120,122,7,6,0,0,121,123,7,7,0,0,122,
121,1,0,0,0,122,123,1,0,0,0,123,124,1,0,0,0,124,125,3,25,12,0,125,28,1,0,
0,0,126,128,7,8,0,0,127,126,1,0,0,0,128,129,1,0,0,0,129,127,1,0,0,0,129,
130,1,0,0,0,130,131,1,0,0,0,131,132,6,14,0,0,132,30,1,0,0,0,133,134,5,61,
0,0,134,32,1,0,0,0,135,136,5,59,0,0,136,34,1,0,0,0,137,138,5,47,0,0,138,
36,1,0,0,0,139,140,5,47,0,0,140,141,5,100,0,0,141,142,5,116,0,0,142,143,
5,115,0,0,143,144,5,45,0,0,144,145,5,118,0,0,145,146,5,49,0,0,146,147,5,
47,0,0,147,148,1,0,0,0,148,149,3,33,16,0,149,38,1,0,0,0,17,0,48,50,58,60,
68,70,78,83,96,103,105,108,115,118,122,129,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class DTSLexer extends antlr4.Lexer {

    static grammarFileName = "DTS.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'{'", "'}'", "','", null, null, null, null, 
                         null, null, "'='", "';'", "'/'" ];
	static symbolicNames = [ null, null, null, null, "STRING", "NUMBER2", "ARR", 
                          "KEY", "NUMBER", "WS", "EQ", "SEMICOLON", "ROOT", 
                          "VERSION" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "STRING", "NUMBER2", "ARR", 
                      "KEY", "ESC", "UNICODE", "HEX", "SAFECODEPOINT", "NUMBER", 
                      "INT", "EXP", "WS", "EQ", "SEMICOLON", "ROOT", "VERSION" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

DTSLexer.EOF = antlr4.Token.EOF;
DTSLexer.T__0 = 1;
DTSLexer.T__1 = 2;
DTSLexer.T__2 = 3;
DTSLexer.STRING = 4;
DTSLexer.NUMBER2 = 5;
DTSLexer.ARR = 6;
DTSLexer.KEY = 7;
DTSLexer.NUMBER = 8;
DTSLexer.WS = 9;
DTSLexer.EQ = 10;
DTSLexer.SEMICOLON = 11;
DTSLexer.ROOT = 12;
DTSLexer.VERSION = 13;



